<?php

/*
        Implementation of hook_node_access_records
        Gets all other grants and calls a drupal_alter on them to let
        other modules alter the grants
        Returns the grants with highest properity so they overide other grants.
*/
function alter_grants_node_access_records($node) {
  static $processing = array(); // change to per node based static
  if ($processing[$node->nid]) {
   return array(); // prevent forever loop when module_invoke_all;
  }
  $processing[$node->nid] = 1 ;
  $grants = module_invoke_all('node_access_records', $node);
  $processing[$node->nid] = 0;
  $prop = 0;
  drupal_alter('node_access_records', $grants, $node);
  foreach($grants as $key => $grant) {
    if ($grant['priority'] > $prop) $prop = $grant['priority'] ;
  }
  foreach($grants as $key => $grant) {
    $grants[$key]['priority'] = $prop+999999;
  }
  //print_r($grants);
  return $grants;
}

/* Useful for debugging or adding new grantsto see what grants a user has */

function alter_grants_node_grants($account, $op) {
  static $processing = 0;
  if ($processing) {
    return array(); // prevent forever loop when module_invoke_all;
  }
  $processing = 1 ;
  $grants = module_invoke_all('node_grants', $account, $op);
  $new_grants = module_invoke_all('node_grants_new', $account, $op, $grants);
  $processing = 0;
  if ($new_grants) {
    return $new_grants ;
  }
}

